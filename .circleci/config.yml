version: 2.1

orbs:
  docker-publish: circleci/docker-publish@0.1.7

executors:
  python-docker:
    docker:
      - image: "circleci/python:3.7.3-stretch"
    working_directory: ~/workspace
    environment:
      TZ: "Asia/Jerusalem"

  node-docker:
    docker:
      - image: "circleci/node:lts"
    working_directory: ~/workspace

commands:
  install-dockerlint:
    description: Download and install the dockerlint linter
    steps:
      - restore_cache:
          keys:
            - v1-switcher-webapi-node-{{ .Branch }}-{{ checksum "Dockerfile" }}-{{ checksum "shellscripts/dockerlint-verify.sh" }}
      - run:
          name: Install dockerlint 0.3.11
          command: |
            bash shellscripts/dockerlint-download-prepare.sh 0.3.11
      - save_cache:
          key: v1-switcher-webapi-node-{{ .Branch }}-{{ checksum "Dockerfile" }}-{{ checksum "shellscripts/dockerlint-verify.sh" }}
          paths:
            - dockerlint-0.3.11

  install-prettier:
    description: Install prettier with npm
    steps:
      - restore_cache:
          keys:
            - v1-switcher-webapi-node-{{ .Branch }}-{{ checksum ".prettierrc.yml" }}-{{ checksum ".prettierignore" }}
      - run:
          name: Install prettier
          command: |
            npm install --no-save prettier
      - save_cache:
          key: v1-switcher-webapi-node-{{ .Branch }}-{{ checksum ".prettierrc.yml" }}-{{ checksum ".prettierignore" }}
          paths:
            - node_modules

  prepare-venv:
    description: Prepare the virtual environment
    steps:
      - restore_cache:
          keys:
            - v1-switcher-webapi-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements_test.txt" }}-{{ checksum "requirements_constraints.txt" }}
      - run:
          name: Create the venv, install all requirements and save to cache
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -q --progress-bar off -r requirements.txt -c requirements_constraints.txt
            pip install -q --progress-bar off -r requirements_test.txt -c requirements_constraints.txt
      - save_cache:
          key: v1-switcher-webapi-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements_test.txt" }}-{{ checksum "requirements_constraints.txt" }}
          paths:
            - ./venv

  run-dockerlint:
    description: Run dockerlint linter
    steps:
      - run:
          name: Dockerlint
          command: |
            node dockerlint-0.3.11/bin/dockerlint.js -dpf Dockerfile

  run-prettier:
    description: Run prettier linter
    steps:
      - run:
          name: Prettier
          command: |
            prettier --config .prettierrc.yml --ignore-path .prettierignore --check *.* **/*.*

  check-security:
    description: Run bandit tests
    steps:
      - run:
          name: Code-security
          command: |
            . venv/bin/activate
            bandit -rvc bandit.yml pyscripts -l -ii

  run-linters:
    description: Run flake8, pydocstyle and pydocstyle linters
    steps:
      - run:
          name: Linters
          command: |
            . venv/bin/activate
            flake8 --statistics --count --doctests pyscripts/
            pydocstyle -v --count pyscripts/
            pycodestyle -v --statistics --show-pep8 --count pyscripts/
            pylint --disable fixme --rcfile pylintrc pyscripts/

  run-mypy:
    description: Run mypy type checking
    steps:
      - run:
          name: Mypy
          command: |
            . venv/bin/activate
            mypy --config-file mypy.ini pyscripts/

  run-tests-with-coverage:
    description: Run pytest test cases with coverage report
    steps:
      - run:
          name: Pytest
          command: |
            . venv/bin/activate
            pytest -vs --cov --cov-config=.coveragerc --cov-report=xml:coverage_report/coverage.xml pyscripts/test_server.py
      - persist_to_workspace:
          root: coverage_report/
          paths:
            - coverage.xml
      - store_artifacts:
          path: coverage_report
      - store_test_results:
          path: coverage_report

jobs:
  dockerlint-job:
    executor:
      name: node-docker
    steps:
      - checkout
      - install-dockerlint
      - run-dockerlint

  prettier-job:
    executor:
      name: node-docker
    steps:
      - checkout
      - install-prettier
      - run-prettier

  docker-check-and-build-job:
    executor:
      name: docker-publish/docker
    steps:
      - checkout
      - setup_remote_docker
      - docker-publish/build:
          dockerfile: Dockerfile
          path: .
          image: tomerfi/switcher_webapi
          tag: testing

  security-job:
    executor:
      name: python-docker
    steps:
      - checkout
      - prepare-venv
      - check-security

  linters-job:
    executor:
      name: python-docker
    steps:
      - checkout
      - prepare-venv
      - run-linters

  pylint-job:
    executor:
      name: python-docker
    steps:
      - checkout
      - prepare-venv
      - run-pylint

  mypy-job:
    executor:
      name: python-docker
    steps:
      - checkout
      - prepare-venv
      - run-mypy

  unittests-job:
    executor:
      name: python-docker
    steps:
      - checkout
      - prepare-venv
      - run-tests-with-coverage

  coverage-reports-job:
    executor:
      name: python-docker
    steps:
      - checkout
      - prepare-venv
      - attach_workspace:
          at: coverage_report/
      - run:
          name: CodeCov
          command: |
            . venv/bin/activate
            codecov --file coverage_report/coverage.xml
            python-codacy-coverage -r coverage_report/coverage.xml

workflows:
  version: "2"
  build:
    jobs:
      - dockerlint-job

      - prettier-job

      - docker-check-and-build-job:
          requires:
            - dockerlint-job
            - prettier-job

      - security-job:
          requires:
            - docker-check-and-build-job

      - linters-job:
          requires:
            - docker-check-and-build-job

      - mypy-job:
          requires:
            - docker-check-and-build-job

      - unittests-job:
          requires:
            - security-job
            - linters-job
            - mypy-job

      - coverage-reports-job:
          requires:
            - unittests-job
