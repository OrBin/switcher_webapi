[tox]
envlist =
    docslint
    docsbuild
    prettier
    shellcheck
    dockerlint
    dockerbuildtest
    codesec
    codelint
    typing
    py37

[testenv]
basepython = python3.7
skip_install = true
skipsdist=True
deps =
    py37: -r{toxinidir}/requirements.txt
    {codelint,typing,py37}: -r{toxinidir}/requirements_test.txt
    {docslint,docsbuild}: -r{toxinidir}/requirements_docs.txt
    {codelint,typing,py37,docslint,docsbuild}: -c{toxinidir}/requirements_constraints.txt

[testenv:docslint]
description = Pass restructuredText files through doc8 linter
commands = doc8 --config {toxinidir}/doc8.ini {toxinidir}/docs/source

[testenv:docsbuild]
changedir = docs
depends = docslint
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees source {envtmpdir}/html

[testenv:prettier]
description = Use nodeenv to run prettier in python venv
deps = nodeenv==1.3.3
whitelist_externals = prettier
changedir = {toxinidir}/.tox/prettier
commands =
    nodeenv --python-virtualenv
    npm install --no-save prettier@1.18.2
    prettier --config {toxinidir}/.prettierrc.yml --ignore-path {toxinidir}/.prettierignore --check {toxinidir}/*.* {toxinidir}/**/*.*

[testenv:shellcheck]
description = Run shellcheck (if exists) for linting shell scripts
depends = prettier
commands = /bin/bash {toxinidir}/shellscripts/shellcheck-verify.sh {toxinidir}/shellscripts/ sh

[testenv:dockerlint]
description = Run local only dockerlint linter
depends =
    prettier
    shellcheck
commands =
    /bin/bash {toxinidir}/shellscripts/dockerlint-verify.sh {toxinidir}/Dockerfile
    
[testenv:dockerbuildtest]
description = Run local only dockerlint linter
depends = dockerlint
whitelist_externals = make
commands =
    make docker-full-structure-testing

[testenv:codesec]
deps = bandit == 1.6.1
depends = dockerlint
commands =
    bandit -rvc {toxinidir}/bandit.yml {toxinidir}/pyscripts {toxinidir}/docs/source/conf.py -l -ii

[testenv:codelint]
description = Run flake8 and pylint linters
depends = dockerlint
commands =
    flake8 --statistics --count --doctests --verbose {toxinidir}/pyscripts/ {toxinidir}/docs/source/
    pylint --disable fixme --rcfile {toxinidir}/pylintrc {toxinidir}/pyscripts/ {toxinidir}/docs/source/conf.py

[testenv:typing]
description = Run mypy type checking
depends = dockerlint
commands =
    mypy --config-file {toxinidir}/mypy.ini {toxinidir}/pyscripts/ {toxinidir}/docs/source/conf.py


[testenv:py37]
description = Run pytest test cases with coverage report
depends =
    codesec
    codelint
    typing
commands =
    pytest -vs --cov --cov-config={toxinidir}/.coveragerc {toxinidir}/pyscripts/test_server.py
