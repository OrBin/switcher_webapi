[tox]
envlist =
    dockerlint
    prettier
    lint
    typing
    codesec
    py37

[testenv]
basepython = python3.7
skip_install = true
deps =
    py37: -r{toxinidir}/requirements.txt
    {lint,pylint,typing,py37}: -r{toxinidir}/requirements_test.txt
    {lint,pylint,typing,py37}: -c{toxinidir}/requirements_constraints.txt

[testenv:dockerlint]
description = Run local only dockerlint linter
commands =
    /bin/bash shellscripts/dockerlint-verify.sh {toxinidir}/Dockerfile

[testenv:prettier]
description = Use nodeenv to run prettier in python venv
deps = nodeenv==1.3.3
whitelist_externals = prettier
changedir = {toxinidir}/.tox/prettier
commands =
    nodeenv --python-virtualenv
    npm install --no-save prettier
    prettier --config {toxinidir}/.prettierrc.yml --ignore-path {toxinidir}/.prettierignore --check {toxinidir}/*.* {toxinidir}/**/*.*

[testenv:lint]
description = Run flake8, pydocstyle, pydocstyle and pylint linters
depends = dockerlint
commands =
    flake8 --statistics --count --doctests {toxinidir}/pyscripts/
    pydocstyle -v --count {toxinidir}/pyscripts/
    pycodestyle -v --statistics --show-pep8 --count {toxinidir}/pyscripts/
    pylint --disable fixme --rcfile {toxinidir}/pylintrc {toxinidir}/pyscripts/

[testenv:typing]
description = Run mypy type checking
depends = dockerlint
commands =
    mypy --config-file {toxinidir}/mypy.ini {toxinidir}/pyscripts/

[testenv:codesec]
deps =
    bandit == 1.6.0
commands =
    bandit -rvc {toxinidir}/bandit.yml {toxinidir}/pyscripts -l -ii

[testenv:py37]
description = Run pytest test cases with coverage report
depends = dockerlint
commands =
    pytest -vs --cov --cov-config={toxinidir}/.coveragerc {toxinidir}/pyscripts/test_server.py
